{"pages":[{"url":"https://pagpires.github.io/output/404.html","text":"\n\n\n\n\n\n\n\n\n\nPage not found · Hong's Blog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHong's Blog\n\n\nHome\nCategories\nTags\nArchives\n \n\n\n\n\n\n\n\n\n\n\n\nThat page doesn't exist!\n\n\n\n\nSorry, but the page you are looking for cannot be found. It seems that the page you were trying to reach doesn't exist, or may be it has just moved, or it no longer exists.\nThe best thing to do is to use the search form or start again from the home page.\n\n\n\nSearch\n\n\n\n\n\n\n\n\n\n\n\n\n\nPowered by Pelican. Theme: Elegant by Talha Mansoor\n\n\n \n\n\n            function validateForm(query)\n            {\n                return (query.length > 0);\n            }\n        \n\n\n","tags":"","title":"Page not found · Hong's Blog\n"},{"url":"https://pagpires.github.io/practice-of-interactive-bargraph.html","text":"Here below is my practice of interactive bargraph. Here are several features that I've introduced: Data-based color Highlighting of the mouse-hovered bar, smooth transition A tooltip with a position defined by the mouse-hovered bar I basically followed the tutorial written by Scott Murray. .axis text{ font-family: sans-serif; font-size: 11px; } .axis path, .axi line{ fill: none; stroke: black; shape-rendering: crispEdges; } svg rect .hightlight{ fill: orange; } #tooltip { position: absolute; width: 200px; height: auto; padding: 10px; background-color: white; -webkit-border-radius: 10px; -moz-border-radius: 10px; border-radius: 10px; -webkit-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4); -moz-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4); box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4); pointer-events: none; } #tooltip.hidden { display: none; } #tooltip p { margin: 0; font-family: sans-serif; font-size: 16px; line-height: 20px; } h3 { text-align: center; font-family: sans-serif; } Practice of interactive bargraph design The value of this category 100 % var width = 500, height = 300, xPadding = 25, yPadding = 15; var numN = 20, numRange = 100; var numList = []; for (var i=0; i<numN; i++){ numList.push(Math.floor(Math.random()*numRange)); } //scale var xScale = d3.scale.linear() .domain([0, numList.length]) .range([0, width-2*xPadding]); var yScale = d3.scale.linear() .domain([0, d3.max(numList)]) .range([0, height-2*xPadding]); var colScale = d3.scale.linear() .domain([0, d3.max(numList)]) .range([50, 255]); //draw bars var barWidth = (width-xPadding*2)/numN*0.7; var svg = d3.select(\"div#barGraph\").append(\"svg\") .attr(\"width\", width) .attr(\"height\", height) .attr(\"id\", \"canvas\"); svg.selectAll(\"g\") .data(numList) .enter() .append(\"g\") .attr(\"transform\", \"translate(\"+xPadding+\",\"+yPadding+\")\") .append(\"rect\") .attr(\"width\", barWidth) .attr(\"x\", function(d,i){ return xScale(i); }) .attr(\"y\", function(d){ return height-yPadding-yScale(d); }) .attr(\"height\", function(d) { return yScale(d); }) .attr(\"fill\", function(d){ return \"rgb(0,0,\"+Math.floor(colScale(d))+\")\"; }); //text svg.selectAll(\"g\") .append(\"text\") .text(function(d){ return d; }) .attr(\"x\", function(d,i) { return xScale(i)+barWidth/2; }) .attr(\"y\", function(d){ return height-yPadding-yScale(d)+10; }) .attr(\"fill\", \"white\") .attr(\"text-anchor\",\"middle\") .attr(\"font-family\",\"sans-serif\") .attr(\"font-size\",\"11px\") //axis // var yAxis = d3.svg.axis() // .scale(yScale) // .orient(\"left\") // .ticks(5); // svg.append(\"g\") // .attr(\"class\",\"axis\") // .attr(\"transform\",\"translate(\"+xPadding+\",\"+4*yPadding+\")\") // .call(yAxis); //interactivity: highlight var offsetX = document.getElementById('barGraph').offsetLeft; var offsetY = document.getElementById('barGraph').offsetTop; svg.selectAll(\"g\") .on(\"mouseover\",function(d){ var elemSelect = d3.select(this).select(\"rect\"); elemSelect.attr(\"fill\",\"orange\"); var point = d3.mouse(this), xPosition = +elemSelect.attr(\"x\"), yPosition = +elemSelect.attr(\"y\")-10; var tooltip = d3.select('div#barGraph').select('#tooltip'); tooltip.style(\"left\", (offsetX+xPosition)+\"px\") .style(\"top\", (offsetY+ yPosition)+\"px\"); tooltip.select(\"#value\").text(d); tooltip.classed(\"hidden\", false); }) .on(\"mouseout\", function(){ d3.select(this).select(\"rect\") .transition() .duration(250) .attr(\"fill\", function(d){ return \"rgb(0,0,\"+Math.floor(colScale(d))+\")\"; }) d3.select(\"#tooltip\").classed(\"hidden\", true); }); Tips: Direct copy-pasting of the vis code into markdown will cause problems. First you want to avoid selection based on 'body'. Generally you can create a 'div' with an id inside 'body' to make it work. Additionally, in this vis, when creating the tooltip and assign it with the x,y-coordinates of the bar you've hovered, you need to get the position of the whole 'div' where your vis resides. You then use this position as a offset and add it to the bar position, to calculate the position of your tooltip. Without this offset, your tooltip will appear on the top left of the whole webpage, rather than that of the vis, since the tooltip position is 'absolute'.","tags":"Viz","title":"Practice of interactive bargraph"},{"url":"https://pagpires.github.io/its-just-a-curve.html","text":"After trying different tools for my blogging system, I eventually settled with Markdown + pelican + github page . Here are my reasons. Markdown I need a system to write easily. WordPress and Markdown are my choices however Markdown has a better geeky flavor. More importantly, I will integrate the interactive data visualization into the webpage. WordPress can do this with some plugins however it doesn't support JSON to be upload, therefore I would have to upload my data source in my server while uploading the CSS and JS script to WordPress, which is annoying. After I saw this blog , it became very natural that Markdown is the choice to me. Pelican Choosing Markdown for blogging I will need a tool to generate static web pages. Since I plan to write some data analysis reports and to record my progress in Kaggle every once a while, I will often use ipython notebook and integrate it into my blog. Then Pelican , a python-based tool for generating static web pages, seems to serve that role, especially after I saw this tutorial for setting up a data science blog. GitHub Choosing GitHub is just to add some more geeky flavor to this blog. This might also force me to be familiar with project version control, which is an essential skill to me. Basically that's how I ended up with these three gadgets for my blogging system. Either in terms of proficiency of these three tools, or in terms of skillfulness in the data science field that I'm going to cover in this blog, I'm both a newbie. However, for a systematically trained scientist-to-be like me, nothing can be hard after some dedicated time and efforts. It's just a learning curve, isn't it?","tags":"Misc","title":"It's just a curve"}]}