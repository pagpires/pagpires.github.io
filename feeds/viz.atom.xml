<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hong's Blog</title><link href="https://pagpires.github.io/" rel="alternate"></link><link href="https://pagpires.github.io/feeds/viz.atom.xml" rel="self"></link><id>https://pagpires.github.io/</id><updated>2016-08-27T23:21:28-04:00</updated><entry><title>Practice of interactive bargraph</title><link href="https://pagpires.github.io/practice-of-interactive-bargraph.html" rel="alternate"></link><published>2016-08-27T23:21:28-04:00</published><author><name>Xinyu Hong</name></author><id>tag:pagpires.github.io,2016-08-27:practice-of-interactive-bargraph.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;Here below is my practice of interactive bargraph. Here are several features that I've introduced:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data-based color&lt;/li&gt;
&lt;li&gt;Highlighting of the mouse-hovered bar, smooth transition&lt;/li&gt;
&lt;li&gt;A tooltip with a position defined by the mouse-hovered bar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I basically followed the &lt;a href="http://chimera.labs.oreilly.com/books/1230000000345/ch10.html"&gt;tutorial&lt;/a&gt; written by Scott Murray.&lt;/p&gt;
&lt;style type="text/css"&gt;
    .axis text{
      font-family: sans-serif;
      font-size: 11px;
    }
    .axis path, 
    .axi line{
      fill: none;
      stroke: black;
      shape-rendering: crispEdges;
    }
    svg rect .hightlight{
      fill: orange;
    }

    #tooltip {
        position: absolute;
        width: 200px;
        height: auto;
        padding: 10px;
        background-color: white;
        -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
        border-radius: 10px;
        -webkit-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
        -moz-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
        pointer-events: none;
      }

      #tooltip.hidden {
        display: none;
      }

      #tooltip p {
        margin: 0;
        font-family: sans-serif;
        font-size: 16px;
        line-height: 20px;
      }

      h3 {
        text-align: center;
        font-family: sans-serif;
      }
&lt;/style&gt;

&lt;div id="barGraph"&gt;
  &lt;h3&gt;Practice of interactive bargraph design&lt;/h3&gt;
  &lt;div id="tooltip" class="hidden"&gt;
    &lt;p&gt;The value of this category&lt;/p&gt;
    &lt;p&gt;&lt;span id="value"&gt;100&lt;/span&gt;%&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script type="text/javascript" src="https://d3js.org/d3.v3.min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;
    var width = 500, 
        height = 300, 
        xPadding = 25, 
        yPadding = 15;
  var numN = 20,
      numRange = 100;
  var numList = [];
  for (var i=0; i&lt;numN; i++){
    numList.push(Math.floor(Math.random()*numRange));
  }

  //scale
  var xScale = d3.scale.linear()
      .domain([0, numList.length])
      .range([0, width-2*xPadding]);
  var yScale = d3.scale.linear()
      .domain([0, d3.max(numList)])
      .range([0, height-2*xPadding]);
  var colScale = d3.scale.linear()
      .domain([0, d3.max(numList)])
      .range([50, 255]);
    //draw bars
    var barWidth = (width-xPadding*2)/numN*0.7;
  var svg = d3.select("div#barGraph").append("svg")
      .attr("width", width)
      .attr("height", height)
      .attr("id", "canvas");
  svg.selectAll("g")
      .data(numList)
      .enter()
      .append("g")
      .attr("transform", "translate("+xPadding+","+yPadding+")")
      .append("rect")
      .attr("width", barWidth)          
      .attr("x", function(d,i){
        return xScale(i);
      })
      .attr("y", function(d){
        return height-yPadding-yScale(d);
      })
      .attr("height", function(d) {
        return yScale(d);
      })
      .attr("fill", function(d){
        return "rgb(0,0,"+Math.floor(colScale(d))+")";
        });

      //text
      svg.selectAll("g")
          .append("text")
          .text(function(d){
            return d;
          })
          .attr("x", function(d,i) {
            return xScale(i)+barWidth/2;
          })
          .attr("y", function(d){
            return height-yPadding-yScale(d)+10;
          })
          .attr("fill", "white")
          .attr("text-anchor","middle")
          .attr("font-family","sans-serif")
          .attr("font-size","11px")
      //axis
      // var yAxis = d3.svg.axis()
      //     .scale(yScale)
      //     .orient("left")
      //     .ticks(5);
      // svg.append("g")
      //     .attr("class","axis")
      //     .attr("transform","translate("+xPadding+","+4*yPadding+")")
      //     .call(yAxis);

      //interactivity: highlight
      var offsetX = document.getElementById('barGraph').offsetLeft;
      var offsetY = document.getElementById('barGraph').offsetTop;
      svg.selectAll("g")
          .on("mouseover",function(d){

            var elemSelect = d3.select(this).select("rect");
            elemSelect.attr("fill","orange");
            var point = d3.mouse(this),
                xPosition = +elemSelect.attr("x"),
                yPosition = +elemSelect.attr("y")-10;


            var tooltip = d3.select('div#barGraph').select('#tooltip');
            console.log(offsetX, offsetY, xPosition, yPosition);
            tooltip.style("left", (offsetX+xPosition)+"px")
                .style("top", (offsetY+ yPosition)+"px");
            tooltip.select("#value").text(d);
            tooltip.classed("hidden", false);
          })
          .on("mouseout", function(){
            d3.select(this).select("rect")
                .transition()
                .duration(250)
                .attr("fill", function(d){
                  return "rgb(0,0,"+Math.floor(colScale(d))+")";
                })
            d3.select("#tooltip").classed("hidden", true);

          });
&lt;/script&gt;</summary></entry></feed>